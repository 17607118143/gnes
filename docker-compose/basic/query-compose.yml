version: '3.4'
services:
  income-route:
    image: ${DOCKER_IMG_URL}
    command: >
      route --route_type RouteService --port_in ${INCOME_ROUTE_IN} --port_out ${INCOME_ROUTE_OUT}
      --socket_in PULL_BIND --socket_out PUSH_BIND
    networks:
      gnes-net:
        aliases:
          - income_route

  middleman-route:
    image: ${DOCKER_IMG_URL}
    command: >
      route --route_type=RouteService --port_in ${MIDDLEMAN_ROUTE_IN} --port_out ${MIDDLEMAN_ROUTE_OUT}
      --socket_in PULL_BIND --socket_out PUB_BIND
    networks:
      gnes-net:
        aliases:
          - middleman_route

  outgoing-route:
    image: ${DOCKER_IMG_URL}
    command: >
      route --route_type=ReduceRouteService --port_in ${OUTGOING_ROUTE_IN} --port_out ${OUTGOING_ROUTE_OUT}
      --socket_in SUB_BIND --socket_out PUB_BIND --num_part=$NUM_REPLICAS
    networks:
      gnes-net:
        aliases:
          - outgoing_route

  encoder:
    image: ${DOCKER_IMG_URL}
    command: >
      encode --port_in ${INCOME_ROUTE_OUT} --port_out ${MIDDLEMAN_ROUTE_IN}
      --socket_in PULL_CONNECT --socket_out PUSH_CONNECT
      --host_in income-route --host_out middleman-route
      --yaml_path /encoder_config --dump_path /dump/model.bin
    volumes:
      - "${MODEL_DIR}:/ext_data"
      - "${OUTPUT_DIR}:/dump"
    networks:
      gnes-net:
        aliases:
          - encoder_serviced
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3

    depends_on:
      - income-route
      - middleman-route

    configs:
      - encoder_config

  indexer:
    image: ${DOCKER_IMG_URL}
    command: >
      index --port_in ${MIDDLEMAN_ROUTE_OUT} --port_out ${OUTGOING_ROUTE_IN}
       --socket_in SUB_CONNECT --socket_out PUB_CONNECT
       --host_in middleman-route --host_out outgoing-route
       --yaml_path /indexer_config --dump_path /out_data/index.bin
    volumes:
      - index_data:/out_data
      #- type: volume
      #  source: "index_data"
      #  target: "/out_data"

      #- "${OUTPUT_DIR}/indexer_dump.{{.Task.Slot}}:/out_data"

    deploy:
      replicas: ${NUM_INDEXER}
      restart_policy:
        condition: on-failure
        max_attempts: 3

    environment:
      - NODE_ID={{.Node.ID}}
      - SERVICE_ID={{.Service.ID}}
      - SERVICE_NAME={{.Service.Name}}
      - SERVICE_LABELS={{.Service.Labels}}
      - TASK_ID={{.Task.ID}}
      - TASK_NAME={{.Task.Name}}
      - TASK_SLOT={{.Task.Slot}}

    networks:
      gnes-net:
        aliases:
          - index_serviced
    depends_on:
      - middleman-route
      - outgoing-route

    configs:
      - indexer_config

  frontend:
    image: ${DOCKER_IMG_URL}
    command: >
      frontend --port_in ${OUTGOING_ROUTE_OUT} --port_out ${PREPROCESSOR_IN}
       --host_in outgoing-route --host_out income-route --socket_in SUB_CONNECT
       --grpc_port ${GRPC_PORT}

    networks:
      gnes-net:
        aliases:
          - grpc_serviced

    depends_on:
      - income-route
      - outgoing-route

    ports:
      - ${GRPC_PORT}:${GRPC_PORT}

volumes:
  index_data:
    name: "${GNES_STACK_NAME}_shard_{{ .Task.Slot }}_data"

networks:
  gnes-net:
    driver: overlay
    attachable: true

configs:
  encoder_config:
    file: "${ENCODER_YAML_PATH}"
  indexer_config:
    file: "${INDEXER_YAML_PATH}"
  preprocess_config:
    file: "${PREPROCESSOR_YAML_PATH}"