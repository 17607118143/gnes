#kind: pipeline
#name: default
#
#clone:
#  depth: 50
#
#steps:
#
#- name: notify the start on wechat work
#  image: byrnedo/alpine-curl
#  environment:
#    BOT_URL:
#      from_secret: BOT_URL
#  commands:
#  - export MSG_LINK=${DRONE_BUILD_LINK}
#  - export MSG_TITLE="‚åõüèó Start a CI pipeline \`$DRONE_SOURCE_BRANCH\`(\`${DRONE_BUILD_NUMBER}\`)"
#  - export MSG_CONTENT="submit by [$DRONE_COMMIT_AUTHOR]($DRONE_COMMIT_AUTHOR_EMAIL), click the link below to see the status"
#  - ./shell/push-wechatwork.sh
#
#- name: check commit style
#  image: node:alpine
#  commands:
#  - npm install --global --save-dev @commitlint/config-conventional @commitlint/cli
#  - "echo \"module.exports = {extends: ['@commitlint/config-conventional']}\" > commitlint.config.js"
#  - echo $DRONE_COMMIT_MESSAGE | commitlint
#
#- name: setup ci environment
#  image: gnes/ci-base
#  commands:
#  - mkdir -p .cache && ln -snf $(pwd)/.cache $HOME/.cache
#  - export PIP_DOWNLOAD_CACHE=${pwd}.cache/pip_download_cache && export XDG_CACHE_HOME=${pwd}.cache/pip
#  - printf "XDG_CACHE_HOME=$XDG_CACHE_HOME\nPIP_DOWNLOAD_CACHE=$PIP_DOWNLOAD_CACHE\n"
#  - cat /proc/cpuinfo | grep flags
#  - "python -c 'import tensorflow as tf; print(tf.__version__); a=tf.constant(1, tf.int32); print(tf.Session().run(a))'"
#
#- name: pip-install gnes
#  image: gnes/ci-base
#  environment:
#    GNES_ENV_SET: orange-ci
#  commands:
#  - pip install -e .[all]
#  - pylint gnes/**/*.py --exit-zero
#  - python -m unittest tests/*.py
#
#
#- name: notify the sucess on wechat work
#  image: byrnedo/alpine-curl
#  environment:
#    BOT_URL:
#      from_secret: BOT_URL
#  commands:
#  - export MSG_LINK=$DRONE_REPO_LINK
#  - export MSG_TITLE="‚úÖüòÉ All tests passed, good job! \`$DRONE_SOURCE_BRANCH\`(\`${DRONE_BUILD_NUMBER}\`)"
#  - export MSG_CONTENT="the branch \`$DRONE_SOURCE_BRANCH\` submit by [$DRONE_COMMIT_AUTHOR]($DRONE_COMMIT_AUTHOR_EMAIL) is ready to merge to master"
#  - ./shell/push-wechatwork.sh
#
#
#- name: notify the failure on wechat work
#  image: byrnedo/alpine-curl
#  environment:
#    BOT_URL:
#      from_secret: BOT_URL
#  commands:
#  - export MSG_LINK=$DRONE_BUILD_LINK
#  - export MSG_TITLE="‚ùåüò• CI pipeline \`$DRONE_SOURCE_BRANCH\`(\`${DRONE_BUILD_NUMBER}\`) is failed!"
#  - export MSG_CONTENT="please inform [$DRONE_COMMIT_AUTHOR]($DRONE_COMMIT_AUTHOR_EMAIL) to modify and fix [\`$DRONE_SOURCE_BRANCH\`]($DRONE_COMMIT_LINK). click the link below to see the details."
#  - ./shell/push-wechatwork.sh
#  when:
#    status:
#    - failure
#
#trigger:
#  branch:
#  - master
#  event:
#  - pull_request
#
#---

kind: pipeline
name: master-coverity

clone:
  depth: 50

steps:
- name: notify the start on wechat work
  image: byrnedo/alpine-curl
  environment:
    BOT_URL:
      from_secret: BOT_URL
  commands:
  - export MSG_LINK=${DRONE_BUILD_LINK}
  - export MSG_TITLE="‚åõüìú Start to generate the coverage report \`$DRONE_SOURCE_BRANCH\`(\`${DRONE_BUILD_NUMBER}\`)"
  - export MSG_CONTENT="click the link below to see the status"
  - ./shell/push-wechatwork.sh

- name: pip-install gnes
  image: gnes/ci-base
  environment:
    GNES_ENV_SET: orange-ci
    CODECOV_TOKEN_PR:
      from_secret: CODECOV_TOKEN_PR
  commands:
  - pip install -e .[all]
  - pip install coverage codecov
  - coverage run -m unittest discover -s tests/
  - coverage report -m
  - codecov --token $CODECOV_TOKEN_PR

- name: notify the sucess on wechat work
  image: byrnedo/alpine-curl
  environment:
    BOT_URL:
      from_secret: BOT_URL
  commands:
  - export MSG_LINK=$DRONE_REPO_LINK
  - export MSG_TITLE="‚úÖüòÉ Report is successfully updated!"
  - export MSG_CONTENT="new test coverage score is available"
  - ./shell/push-wechatwork.sh

- name: notify the failure on wechat work
  image: byrnedo/alpine-curl
  environment:
    BOT_URL:
      from_secret: BOT_URL
  commands:
  - export MSG_LINK=$DRONE_BUILD_LINK
  - export MSG_TITLE="‚ùåüò• Test-coverage is failed!"
  - export MSG_CONTENT="please inform [$DRONE_COMMIT_AUTHOR]($DRONE_COMMIT_AUTHOR_EMAIL) to modify and fix [\`$DRONE_SOURCE_BRANCH\`]($DRONE_COMMIT_LINK). click the link below to see the details."
  - ./shell/push-wechatwork.sh
  when:
    status:
    - failure

trigger:
  branch:
  - master
  event:
  - pull_request
