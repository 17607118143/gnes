os: linux
dist: xenial
sudo: false
language: python
services:
  - docker
python:
  - "3.6"

cache:
  - pip
  directories:
    - /home/travis/docker/

env:
  global:
    # Docker
    - CONTAINER_NAME=gnes
    - IMAGE_NAME=tencent/gnes

before_install:
  - pip install --upgrade pip
  - pip install -U pylint

  - docker --version
  # - docker rmi $(docker images -q) || true
  # - docker build -t ${IMAGE_NAME} .

install:
  # install TensorFlow (CPU version) from https://storage.googleapis.com/tensorflow/
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      pip install https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.0.0a0-cp27-none-linux_x86_64.whl;
    elif [[ "$TRAVIS_PYTHON_VERSION" == "3.6" ]]; then
      pip install https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.12.0-cp36-cp36m-linux_x86_64.whl;
    fi

  # Take advantage of docker caching by pulling previously built images.
  - docker build -t ${IMAGE_NAME}:${TRAVIS_COMMIT} --pull=true .
  - docker run -d --name ${CONTAINER_NAME} ${IMAGE_NAME}:${TRAVIS_COMMIT}
  - docker ps -a

before_script:
  - env > .env

# command to run tests
script:
  # Test install with current version of setuptools
  - pip install -e . --progress-bar off
  # - pylint gnes/**/*.py --exit-zero
  - docker exec ${CONTAINER_NAME} python -m unittest tests/*.py

branches:
  only:
    - master

notifications:
  email: false