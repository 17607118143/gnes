syntax = "proto2";

package gnes;

message Array {
  // the actual array data, in bytes
  optional bytes data = 1;

  // Specifies the shape (dimensions) of an array
  repeated uint32 shape = 2 [packed = true];

  // Specifies the data type of an array
  optional string dtype = 3 [default = "float"];
}

message ArrayList {
  repeated Array arrays = 1;
}


message Chunk {
  optional uint64 doc_id = 1;
  optional uint32 offset = 2;
  // optional bool is_encoded = 3 [default = false];
  optional string text = 3;
  optional Array blob = 4;
  optional Array encode = 5;
  message Coordinate {
    repeated uint32 x = 1 [packed = true];
  }
  repeated Coordinate coordinates = 6;
}

message Document {
  // The unique document ID specified by third-party application
  optional uint64 id = 1;

  // Optional, the uuid generated by the system automatically
  optional string uuid = 2;

  // The actual textual content of the document
  optional string text = 3;

  // Optional, the doc could also hold binary data, e.g., image
  optional Array blob = 4;

  // If true the document has been divided into several chunks
  optional bool is_parsed = 5 [default = false];

  optional bool is_encoded = 6 [default = false];

  repeated Chunk chunks = 7;

  // enum DocType {
  //   TEXT_DOC = 0;
  //   IMAGE_DOC = 1;
  //   VIDEO_DOC = 2;
  //   MIX_DOC = 3;
  // }
  // optional DocType doc_type = 7 [default = DocType.TEXT_DOC];
}

message SearchResult {
  optional uint64 doc_id = 1;
  optional uint32 doc_size = 2;
  optional uint32 offset = 3;
  optional float score = 4;
  optional Chunk chunk = 5;
}

message Query {
  optional uint32 id = 1;
  optional string text = 2;
  optional Array blob = 3;
  optional Array encode = 4;
  repeated SearchResult results = 5;
  optional uint32 top_k = 6 [default = 10];
}

message SearchRequest {
  optional string _request_id = 1;
  optional Document doc = 2;
  optional uint32 top_k = 3 [default = 10];
  optional uint32 time_out = 4;
}

message IndexRequest {
  optional string _request_id = 1;
  repeated Document docs = 2;
  optional uint32 time_out = 3;
  optional bool update_model = 4 [default = false];
}

message SearchResponse {
  repeated SearchResult data = 1;
  optional uint32 size = 2;
}

message Message {
  optional string msg_id = 1;
  optional string msg_type = 2;
  optional string route = 3;
  optional uint32 part_id = 4 [default = 1];
  optional uint32 num_part = 5 [default = 1];
  enum Mode {
    QUERY = 0;
    INDEX = 1;
    TRAIN = 2;
  }
  optional Mode mode = 6;
  optional bool is_parsed = 7 [default = false];
  optional bool is_encoded = 8 [default = false];

  repeated Document docs = 9;
  repeated Query querys = 10;
  // repeated string logs = 12;
}


